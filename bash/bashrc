###############################################################################
# A component of dotme, the dotfile manager.                                  #
###############################################################################

# User .bashrc file for interactive bash(1) shells.

# To enable the settings/commands in this file for login shells as well,
# this file has to be sourced in /etc/profile.

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

export LC_ALL='en_US.UTF-8'
export TIMEFORMAT='%U + %S # %R'

# Don't put duplicate lines in the history. See bash(1) for more options
export HISTCONTROL=ignoredups
export HISTSIZE=50000

# Check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# Enable color support of ls
if [ "$TERM" != 'dumb' ]; then
  if ls --help 2> /dev/null | grep -q -- --color; then
    [ -x "$(which dircolors 2> /dev/null)" ] && eval "$(dircolors -b)"
    alias ls='ls --color=auto'
  else
    # assume *BSD
    alias ls='ls -G'
  fi
fi

# Some handy ls aliases
alias ll='ls -l'
alias la='ls -A'
alias  l='ls -ahlF'

# Make less more friendly for non-text input files, see lesspipe(1)
[ -x "$(which lesspipe 2> /dev/null)" ] && eval "$(lesspipe)"

export LESS='-M -i -R'

# Set user color
#
# 30 = black
# 31 = dark red
# 32 = green
# 33 = orange
# 34 = blue
# 35 = magenta
# 36 = turquoise
# 37 = gray
# 38 = light red
# 39 = white
MY_COLOR=35  # default

# Customized user setting
# E.g.: MY_COLOR=3$(date +%u) ;-)
[ -f "$HOME/.my_color" ] && . "$HOME/.my_color"

export MY_COLOR

# Set a fancy prompt (non-color, unless we know we "want" color)
if [ "$(id -u)" -eq 0 ]; then
  prompt_indicator='#'
else
  prompt_indicator='>'
fi

export PS1_PLAIN="\u@\h:\w${prompt_indicator} "

case "$TERM" in
  xterm-color|xterm|screen)
    function __prompt_ps1() {
      local rc=$?

      # time
      echo -ne "$5\033[7;${MY_COLOR/30/37}m$6${1:-$(date +%H:%M:%S)}$5\033[0m$6"

      # user & host
      echo -ne " ${2:-$USER}@${3:-$HOSTNAME}"

      # screen window
      [ -n "$WINDOW" ] && echo -ne "#$WINDOW"

      # path
      echo -ne ":${4:-$PWD}"

      # SCM info
      __scm_info

      # exit status
      [ $rc -ne 0 ] && echo -ne " ($5\033[31m$6$rc$5\033[0m$6)"

      # finish
      echo -ne "${prompt_indicator} "
    }

    export PS1="\$(__prompt_ps1 '\t' '\u' '\h' '\w' \[ \])"
    ;;
  *)
    export PS1="$PS1_PLAIN"
    ;;
esac

# If this is an xterm set the title to user@host:dir
case "$TERM" in
  xterm*|rxvt*|screen)
    PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}${WINDOW:+#$WINDOW}: ${PWD}\007"'
    ;;
  *)
    ;;
esac

# Enable bash completion in interactive shells
[ -f /etc/bash_completion ] && . /etc/bash_completion

# Alias definitions.
[ -f /etc/bash_aliases ] && . /etc/bash_aliases
[ -f "$HOME/.bash_aliases" ] && . "$HOME/.bash_aliases"

# Color for grep
export GREP_COLOR=${MY_COLOR/38/39}

export PATH
export CDPATH="$CDPATH:$HOME"

# SCM stuff
function __no_scm_info() { function __scm_info() { :; }; }
[ -f "$HOME/.bash_scm_info" ] && . "$HOME/.bash_scm_info" || __no_scm_info

### LOAD CUSTOM FILE
[ -f "$HOME/.bashrc.mine" ] && . "$HOME/.bashrc.mine" || true
