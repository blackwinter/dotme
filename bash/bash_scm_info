function __scm() {
  if __svn; then
    echo 'svn'
  elif __git; then
    echo 'git'
  elif __bzr; then
    echo 'bzr'
  elif __hg; then
    echo 'hg'
  fi
}

function __scm_info() {
  local info version branch

  [ ! -d "$PWD" -o -f .no_scm_info ] && return

  if __svn; then
    info="svn:$(__svn_repo)@$(__svn_version)$(__svn_stale)"
  elif __git; then
    if __git_head; then
      version="$(__git_version)"
      branch="$(__git_branch)"
    else
      branch="$(__git_branch2)"
    fi

    info="git:${branch:-<$(__git_name)>}@${version:-<init>}$(__git_stale)"
  elif __bzr; then
    info="bzr:$(__bzr_branch)@$(__bzr_version)"
  elif __hg; then
    info="hg:$(__hg_branch)@$(__hg_version)"
  fi

  [ -n "$info" ] && echo -n " [$info]"
}

# SVN
function __svn() {
  [ -d '.svn' ] || [[ ! $(__svn_version) =~ ^Unversioned ]]
}

function __svn_version() {
  svnversion 2> /dev/null
}

function __svn_repo() {
  svn info 2> /dev/null | sed -n '/^Repository Root:/s:.*/::p'
}

function __svn_stale() {
  : svn status --show-updates 2> /dev/null | $(which grep) -F -o -m1 '*'
}

# GIT
function __git() {
  [ -d '.git' ] || [ "$(git rev-parse --is-bare-repository 2> /dev/null)" == "false" ]
}

function __git_head() {
  git show-ref --head &> /dev/null
}

function __git_version() {
  git rev-parse --short HEAD 2> /dev/null | tr -d '\n'
  git diff --quiet           2> /dev/null || echo -n 'M'
  git diff --quiet --cached  2> /dev/null || echo -n '*'
}

function __git_branch() {
  git rev-parse --symbolic --abbrev-ref $(git symbolic-ref HEAD 2> /dev/null)
}

function __git_branch2() {
  git symbolic-ref HEAD 2> /dev/null | sed 's:.*/::'
}

function __git_name() {
  git describe HEAD 2> /dev/null
}

function __git_stale() {
  git status 2> /dev/null | sed -n '
    /^\(# \)\?Your branch is /{
      s/.* ahead o.* \([0-9]\+\) .*/+\1/p;
      s/.* behind .* \([0-9]\+\) .*/-\1/p
    };
      s/^\(# \)\?Untracked files:/?/p
  ' | tr -d '\n'
}

# BZR

function __bzr() {
  [ -d '.bzr' ] || bzr root &> /dev/null
}

function __bzr_branch() {
  bzr nick 2> /dev/null
}

function __bzr_version() {
  bzr revno 2> /dev/null
}

# HG
function __hg() {
  [ -d '.hg' ] || hg identify &> /dev/null
}

function __hg_branch() {
  hg branch
}

function __hg_version() {
  hg summary --quiet | awk '/parent:/{print $2}'
}

# vim:ft=sh
