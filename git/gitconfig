###############################################################################
# A component of dotme, the dotfile manager.                                  #
###############################################################################

[user]
	name  = <Your Name>
	email = <Your Email>

[core]
  excludesfile = ~/.gitignore

[color]
  ui        = true
[color "branch"]
  current   = yellow reverse
  local     = yellow
  remote    = green
[color "diff"]
  meta      = yellow bold
  frag      = magenta bold
  old       = red bold
  new       = green bold
[color "status"]
  added     = yellow
  changed   = green
  untracked = cyan

[alias]
  a    =      add
  aa   =      add .
  al   = !git cl | sed -n 's/^alias\\.//p'
  au   =      add -u .
  b    =      branch -v
  bc   = !git rev-parse --symbolic --abbrev-ref $(git symbolic-ref HEAD 2> /dev/null)
  bm   =      branch -v --merged
  bn   =      branch -v --no-merged
  c    =      commit -v
  ca   =      commit -v --all
  cb   =      checkout -b
  cf   =      config
  ci   =      commit -v --interactive
  cl   =      config -l
  co   =      checkout
  cp   =      cherry-pick -x
  d    =      diff --no-prefix
  dc   =      diff --no-prefix --cached
  dd   = !GIT_PAGER=less git d
  di   =      diff --no-prefix HEAD
  dp   =      diff --no-prefix HEAD^
  e    =      reset HEAD
  ee   =      reset --soft HEAD^
  f    =      fetch
  g    =      grep -E -n
  h    =      help
  l    = !git ly --reverse -10
  la   = !GIT_PAGER=less git log --reverse
  lc   =      whatchanged --reverse -10
  lf   = !GIT_PAGER=less git whatchanged
  lg   = "!sh -c 'a=\"$1\"; shift; git ly --grep=\"$a\" -E \"$@\"' -"
  lgv  = "!sh -c 'git lg \"$@\" --pretty=medium' -"
  ll   =      log --reverse -10
  lol  =      log --pretty=oneline --abbrev-commit --graph --decorate
  lp   = !git lv -10
  lv   = !git la -p
  ly   =      log --pretty=tformat:\"%C(magenta)%h %Cgreen%ai %C(cyan)%an %Creset- %s\"
  m    =      merge
  msg  =      commit --allow-empty -m
  o    =      remote -v
  oo   = !git o | grep @ | cut -f1 | sort -u
  p    =      push
  pa   = !git oo | xargs -I '{}' git push '{}' $(git bc)
  pt   = !git oo | xargs -I '{}' git push --tags '{}'
  r    =      reset
  ri   = "!sh -c 'git rebase -i $1^' -"
  s    =      status
  ss   =      status --short
  st   =      stash
  sta  =      stash apply
  stl  =      stash list
  stp  =      stash save --patch
  sts  =      stash save
  stt  =      stash pop
  stw  =      stash show --patch --no-prefix
  t    =      tag
  tl   =      tag -n1 -l
  u    =      pull
  ua   = !git remote | xargs -I '{}' git pull '{}' $(git bc) && git fetch
  ur   = !git remote | xargs -I '{}' git pull --rebase '{}' $(git bc) && git fetch
  v    =      revert
  w    =      show --pretty=fuller --no-prefix
  x    =      commit -v --amend
  xa   =      commit -v --amend -a
  z    =      checkout-index -u -f --
  zz   =      checkout -f --
